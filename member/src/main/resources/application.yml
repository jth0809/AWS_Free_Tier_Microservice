server:
  port: ${server_port}
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful
spring:
    config:
        import: "optional:configserver:"
    application:
        name: "member"
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: ${issuer-uri}
    cloud:
        stream:
            bindings:
                member-in-0:
                    destination: member-write
                    content-type: application/json
                    group: ${spring.application.name}
    rabbitmq:
        host: ${rabbitmq_host}
        port: ${rabbitmq_port}
        username: ${rabbitmq_username}
        password: ${rabbitmq_password}
        connection-timeout: 5s
        listener:
            simple:
                retry:
                    enabled: true
                    max-attempts: 3
                    initial-interval: 1000
                    max-interval: 10000
                    multiplier: 2
    datasource:
        url: ${POSTGRES_URL}
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
    jpa:
        hibernate:
            ddl-auto: create-drop
